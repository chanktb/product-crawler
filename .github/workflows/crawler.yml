name: KTB Product Crawl

on:
  schedule:
    - cron: "*/5 0-16 * * *"
  workflow_dispatch:

permissions:
  contents: write

jobs:
  crawl:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.x"

      - name: Install dependencies
        run: pip install requests beautifulsoup4

      - name: Run crawler
        run: python crawler.py

      - name: Check for file changes
        id: check_changes
        run: |
          git add last_file.txt
          if ! git diff --cached --quiet -- last_file.txt; then
            echo "Changes detected in last_file.txt."
            echo "changed=true" >> "$GITHUB_OUTPUT"
          else
            echo "No changes in last_file.txt."
            echo "changed=false" >> "$GITHUB_OUTPUT"
          fi
          
      # --- PHẦN LOGIC KÍCH HOẠT ĐƯỢC THAY THẾ BẰNG GITHUB CLI ---
      - name: Check status and trigger image-crawler if idle
        # Chỉ chạy bước này nếu có thay đổi
        if: steps.check_changes.outputs.changed == 'true'
        id: trigger_dispatch # Đặt ID để lấy output cho Telegram
        env:
          # Cần PAT có quyền 'repo' để kiểm tra và kích hoạt workflow khác
          GH_TOKEN: ${{ secrets.KTBIHOW_PAT }}
          TARGET_OWNER: 'ktbihow'
          TARGET_REPO: 'image-crawler'
          TARGET_WORKFLOW: 'crawler-image.yml' # Tên file workflow của repo đích
        run: |
          echo "Checking status of '${TARGET_WORKFLOW}' in ${TARGET_OWNER}/${TARGET_REPO}..."
          
          # Dùng 'gh run list' để kiểm tra các lần chạy đang 'in_progress' hoặc 'queued'
          in_progress_runs=$(gh run list \
            --repo "${TARGET_OWNER}/${TARGET_REPO}" \
            --workflow "${TARGET_WORKFLOW}" \
            --status "in_progress" \
            --status "queued" \
            --limit 1 \
            --json databaseId)

          # Nếu kết quả trả về không phải là mảng rỗng '[]', tức là có action đang chạy
          if [[ "$in_progress_runs" != "[]" ]]; then
            echo "Target workflow is busy. Skipping trigger."
            echo "triggered=skipped" >> "$GITHUB_OUTPUT"
            echo "reason=Target workflow is busy" >> "$GITHUB_OUTPUT"
          else
            echo "Target workflow is idle. Triggering now..."
            # Dùng 'gh api' để gửi sự kiện repository_dispatch
            gh api \
              --method POST \
              -H "Accept: application/vnd.github+json" \
              "/repos/${TARGET_OWNER}/${TARGET_REPO}/dispatches" \
              -f event_type='new_product_available'
            echo "Trigger dispatch sent successfully."
            echo "triggered=sent" >> "$GITHUB_OUTPUT"
            echo "reason=New changes detected" >> "$GITHUB_OUTPUT"
          fi

      # --- KẾT THÚC PHẦN THAY THẾ ---

      - name: Send Log Content to Telegram
        if: always()
        env:
          TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
        run: |
          LOG_CONTENT=$(cat last_file.txt)
          # Giới hạn độ dài tin nhắn để tránh lỗi Telegram
          TRUNCATED_LOG=$(echo "$LOG_CONTENT" | head -c 4000)
          curl -s -X POST https://api.telegram.org/bot$TELEGRAM_BOT_TOKEN/sendMessage \
          -d chat_id=$TELEGRAM_CHAT_ID \
          -d text="$TRUNCATED_LOG" || echo "Lỗi khi gửi nội dung log!"

      - name: Send Success Message to Telegram
        if: success()
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_CHAT_ID }}
          token: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          # Cập nhật message để cung cấp thông tin chi tiết hơn
          message: |
            ✅ KTB Product Crawl - Done
            Changes detected: ${{ steps.check_changes.outputs.changed }}
            Trigger status: ${{ steps.trigger_dispatch.outputs.triggered }} (${{ steps.trigger_dispatch.outputs.reason }})

      - name: Send Failure Message to Telegram
        if: failure()
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_CHAT_ID }}
          token: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          message: "❌ KTB Product Crawl - Fail."
          
      - name: Commit & push results
        if: steps.check_changes.outputs.changed == 'true'
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add *.txt
          git commit -m "Update URLs with new products [skip ci]"
          git push
