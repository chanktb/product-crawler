name: KTB Product Crawl

on:
  schedule:
    - cron: "*/5 0-16 * * *"
  workflow_dispatch:

permissions:
  contents: write

jobs:
  crawl:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.x"

      - name: Install dependencies
        run: pip install requests beautifulsoup4

      - name: Run crawler
        run: python crawler.py

      # --- PHẦN THÊM MỚI BẮT ĐẦU TỪ ĐÂY ---

      - name: Check for changes and trigger dispatch
        if: success()
        id: check_changes # Đặt ID cho bước này để tham chiếu sau
        run: |
          # Thêm file vào staging area để git diff có thể so sánh với HEAD
          git add last_file.txt
          # Kiểm tra xem có sự thay đổi nào trong file đã được stage không
          # git diff sẽ trả về exit code 0 nếu không có thay đổi, 1 nếu có thay đổi
          if ! git diff --cached --quiet -- last_file.txt; then
            echo "Changes detected in last_file.txt."
            echo "changed=true" >> "$GITHUB_OUTPUT"
          else
            echo "No changes in last_file.txt."
            echo "changed=false" >> "$GITHUB_OUTPUT"
          fi
          
      - name: Dispatch to another repository
        # Chỉ chạy bước này nếu bước 'check_changes' ở trên xác định là có thay đổi
        if: steps.check_changes.outputs.changed == 'true'
        env:
          TARGET_OWNER: 'ktbihow' # <-- THAY TÊN USERNAME HOẶC ORGANIZATION CỦA REPO KIA
          TARGET_REPO: 'image-crawler' # <-- THAY TÊN REPO KIA
          GITHUB_PAT: ${{ secrets.KTBIHOW_PAT }} # <-- Token để gọi API
        run: |
          echo "Triggering workflow in ${TARGET_OWNER}/${TARGET_REPO}"
          curl -L \
            -X POST \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer ${{ env.GITHUB_PAT }}" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            https://api.github.com/repos/${{ env.TARGET_OWNER }}/${{ env.TARGET_REPO }}/dispatches \
            -d '{"event_type":"new_product_available"}'

      # --- KẾT THÚC PHẦN THÊM MỚI ---

      - name: Send Log Content to Telegram
        if: always()
        env:
          TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
        run: |
          LOG_CONTENT=$(cat last_file.txt)
          curl -s -X POST https://api.telegram.org/bot$TELEGRAM_BOT_TOKEN/sendMessage \
          -d chat_id=$TELEGRAM_CHAT_ID \
          -d text="${LOG_CONTENT}" || echo "Lỗi khi gửi nội dung log!"

      - name: Send Success Message to Telegram
        if: success()
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_CHAT_ID }}
          token: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          message: "✅ KTB Product Crawl - Done. Changes detected: ${{ steps.check_changes.outputs.changed }}" # Thêm thông tin thay đổi

      - name: Send Failure Message to Telegram
        if: failure()
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_CHAT_ID }}
          token: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          message: "❌ KTB Product Crawl - Fail."
          
      - name: Commit & push results
        # Chỉ commit khi có sự thay đổi
        if: steps.check_changes.outputs.changed == 'true'
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add *.txt # Giữ nguyên hoặc chỉ định git add last_file.txt nếu muốn
          git commit -m "Update URLs with new products [skip ci]"
          git push
